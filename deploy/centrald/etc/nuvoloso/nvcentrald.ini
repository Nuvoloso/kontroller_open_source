[Application Options]
; agentd certificate file
AgentdCertPath = /etc/nuvoloso/tls/agentdCert

; agentd private key file
AgentdKeyPath = /etc/nuvoloso/tls/agentdKey

; clusterd certificate file
ClusterdCertPath = /etc/nuvoloso/tls/clusterdCert

; clusterd private key file
ClusterdKeyPath = /etc/nuvoloso/tls/clusterdKey

; container image pull secret file for customer deployments
; ImagePullSecretPath =

; container repository image path
; ImagePath = 407798037446.dkr.ecr.us-west-2.amazonaws.com/nuvoloso

; Image tag to use when generating cluster deployment YAML
; ClusterDeployTag = v1

; Specify the timeout duration in seconds for client operations
; ClientTimeout = 20

; The maximum number of cluster heartbeats that can be missed
; ClusterTimeoutAfterMisses = 2

; The duration between successive checks for cluster services that have timed out
; ClusterTimeoutCheckPeriod = 5m

; The type of cluster in which the management services will be deployed
; ClusterType = kubernetes

; Specify the timeout duration in seconds for csp domain operations
; CSPTimeout = 20

; Log client HTTP requests and responses
; DebugClient = false

; Permit runtime error injection
; DebugREI = false

; Runtime error injection arena
; DebugREIPath = /var/run/nuvoloso/rei

; Specify the volume driver type
; DriverType = csi

; The name of the management service
; ManagementServiceName = nuvo-https

; The namespace in the cluster where the management services will be deployed
; ManagementServiceNamespace = nuvoloso-management

; The heartbeat period in seconds
; HeartbeatPeriod = 30

; The time interval in seconds after which completed tasks are deleted
; TaskPurgeDelay = 60

; The period for logging build version information
; VersionLogPeriod = 30m0s

; Specify the minimum logging level
; LogLevel = DEBUG

[Authentication and Authorization Options]
; The hostname of the authentication service
; Host = localhost

; The port number of the authentication service
; Port = 5555

; Use SSL (https) to communicate with the authentication service
; UseSSL = false

; The actual server name of the authentication service SSL certificate
; SSLServerName =

[StorageRequest Options]
; Request handler retry loop polling interval if not monitoring events. When monitoring events this is increased.
; RetryInterval = 30s

; Permit runtime error injection
; DebugREI = false

[VolumeSeriesRequest Options]
; Request handler retry loop polling interval if not monitoring events. When monitoring events this is increased.
; RetryInterval = 30s

; Permit runtime error injection
; DebugREI = false

; The interval for running task to purge outdated VSRs
; VSRPurgeTaskInterval = 12h0m0s

; The retention period for outdated VSRs
; VSRRetentionPeriod = 168h

[Audit Log Options]
; The hostname of the audit log database service
; Host = localhost

; The port number of the audit log database service
; Port = 5432

; The audit log user account
; User = postgres

; The name of the database
; Database = nuvo_audit

; Controls debugging
; DebugLevel = 1

; Use SSL to communicate with the audit log database
; UseSSL = false

; The actual server name of the audit log database SSL certificate
; SSLServerName =

; Database connection retry interval
; RetryInterval = 1s

; Database periodic ping interval
; PingInterval = 10s

; The interval for running task to purge outdated audit log records
; AuditPurgeTaskInterval = 24h0m0s

; The retention period for outdated audit log records
; AuditRecordRetentionPeriod = 61368h // 7 years

; The retention period for outdated audit log events
; AuditEventRetentionPeriod = 2184h // 1 quarter/3 months

; The retention period for outdated audit log annotations
; AuditAnnotationRetentionPeriod = 2184h // 1 quarter/3 months

[Mongo Options]
; Mongo client URL
; URL = mongodb://localhost

; Name of database
; DatabaseName = nuvodb

; The path to files containing base configuration data for the datastore
; BaseDataPath = /opt/nuvoloso/lib/base-data

; Maximum size of a server's connection pool. If zero, the driver default is used
; MaxPoolSize = 0
MaxPoolSize = 100

; Timeout for a database operation
; Timeout = 25s

; Use SSL to communicate with the datastore
; UseSSL = false

; The actual server name of the datastore SSL certificate
; SSLServerName =

[Metrics Options]
; The hostname of the metrics database service
; Host = localhost

; The port number of the metrics database service
; Port = 5432

; The metrics user account
; User = postgres

; The name of the database
; Database = nuvo_metrics

; Controls debugging
; DebugLevel = 1

; Use SSL to communicate with the metrics database
; UseSSL = false

; The actual server name of the metrics database SSL certificate
; SSLServerName =

; Database connection retry interval
; RetryInterval = 1s

; Database periodic ping interval
; PingInterval = 10s

; Periodic pool metric period
; PoolMetricPeriod = 1h0m0s

; The value of the periodic pool metric timer is truncated to this duration
; PoolMetricTruncate = 1h0m0s

; Do not insert (unaligned) pool metrics on startup
; PoolMetricSuppressStartup = false

; The maximum number of buffered pool metric records when the database is not available
; PoolMaxBuffered = 100

; Periodic storage metadata metric period
; StorageMetadataMetricPeriod = 1h0m0s

; The value of the periodic storage metadata metric timer is truncated to this duration
; StorageMetadataMetricTruncate = 1h0m0s

; Do not insert (unaligned) storage metadata metrics on startup
; StorageMetadataMetricSuppressStartup = false

; The maximum number of buffered storage metadata records when the database is not available
; StorageMetadataMaxBuffered = 500

; The number of times the storage I/O metric buffer limits may be continuously exceeded (sampled at the database connection retry interval)
; StorageIOBurstTolerance = 3

; The maximum number of buffered storage I/O metric records when the database is not available
; StorageIOMaxBuffered = 1000

; The percentage of I/O permitted over the SSC maximum response time before a violation is flagged
; StorageIOMaxResponseTimePct = 0.1

; Periodic volume metadata metric period
; VolumeMetadataMetricPeriod = 1h0m0s

; The value of the periodic volume metadata metric timer is truncated to this duration
; VolumeMetadataMetricTruncate = 1h0m0s

; Do not insert (unaligned) volume metadata metrics on startup
; VolumeMetadataMetricSuppressStartup = false

; The maximum number of buffered volume metadata records when the database is not available
; VolumeMetadataMaxBuffered = 1000

; The number of times the volume I/O metric buffer limits may be continuously exceeded (sampled at the database connection retry interval)
; VolumeIOBurstTolerance = 3

; The maximum number of buffered volume I/O metric records when the database is not available
; VolumeIOMaxBuffered = 2000

; The percentage of I/O permitted over the service plan maximum response time before a violation is flagged
; VolumeIOMaxResponseTimePct = 0.1

; Periodic spa metric period
; SPAMetricPeriod = 1h0m0s

; The value of the periodic spa metric timer is truncated to this duration
; SPAMetricTruncate = 1h0m0s

; Do not insert (unaligned) spa metrics on startup
; SPAMetricSuppressStartup = false

; The maximum number of buffered spa metric records when the database is not available
; SPAMaxBuffered = 100

[Service Options]
; the listeners to enable, this can be repeated and defaults to the schemes in the swagger spec
; EnabledListeners =
EnabledListeners = https
EnabledListeners = unix

; grace period for which to wait before shutting down the server
; CleanupTimeout = 10s

; controls the maximum number of bytes the server will read parsing the request header's keys and values, including the request line. It does not limit the size of the request body
; MaxHeaderSize = 0B

; the unix socket to listen on
; SocketPath = /var/run/nuvoloso.sock
SocketPath = /var/run/nuvoloso/nvcentrald.sock

; the IP to listen on
; Host = 0.0.0.0
Host = localhost

; the port to listen on for insecure connections, defaults to a random value
; Port = 8080
Port = 8080

; limit the number of outstanding requests
; ListenLimit = 0

; sets the TCP keep-alive timeouts on accepted connections. It prunes dead TCP connections ( e.g. closing laptop mid-download)
; KeepAlive = 3m0s

; maximum duration before timing out read of the request
; ReadTimeout = 30s

; maximum duration before timing out write of the response
; WriteTimeout = 1m0s

; the IP to listen on for tls, when not specified it's the same as --host
TLSHost = 0.0.0.0

; the port to listen on for secure connections, defaults to a random value
TLSPort = 8443

; the certificate to use for secure connections
TLSCertificate = /etc/nuvoloso/tls/centraldCert

; the private key to use for secure connections
TLSCertificateKey = /etc/nuvoloso/tls/centraldKey

; the certificate authority file to be used with mutual tls auth
TLSCACertificate = /etc/nuvoloso/tls/caCert

; limit the number of outstanding requests
; TLSListenLimit = 0

; sets the TCP keep-alive timeouts on accepted connections. It prunes dead TCP connections ( e.g. closing laptop mid-download)
TLSKeepAlive = 3m0s

; maximum duration before timing out read of the request
TLSReadTimeout = 30s

; maximum duration before timing out write of the response
TLSWriteTimeout = 1m0s
